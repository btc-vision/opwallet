name: Create Release

on:
    push:
        tags:
            - v*

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the code
              uses: actions/checkout@v4

            - name: Set blank auth just in case
              run: |
                  echo "//registry.npmjs.org/:_authToken=" >> ~/.npmrc

            - uses: actions/setup-node@v4
              with:
                  node-version: latest

            - uses: actions/cache@v3
              id: install-cache
              with:
                  path: node_modules/
                  key: ${{ runner.os }}-install-${{ hashFiles('**/package-lock.json') }}

            - if: steps.install-cache.outputs.cache-hit != 'true'
              run: npm ci --force
              shell: bash

            - uses: gradle/gradle-build-action@v2

            - name: Get Version Name
              uses: actions/github-script@v3
              id: get-version
              with:
                  script: |
                      const str=process.env.GITHUB_REF;
                      return str.substring(str.indexOf("v") + 1);
                  result-encoding: string

            - name: Build Extension
              run: |
                  npm run build:firefox
                  npm run build:brave
                  npm run build:edge
                  npm run build:opera
                  npm run build:chrome

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: ${{ github.ref }}
                  draft: false
                  prerelease: false

            - name: Upload Firefox Asset
              id: upload_firefox
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: dist/opwallet-firefox-v${{steps.get-version.outputs.result}}.zip
                  asset_name: opwallet-firefox-v${{steps.get-version.outputs.result}}.zip
                  asset_content_type: application/zip

            - name: Upload Brave Asset
              id: upload_brave
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: dist/opwallet-brave-v${{steps.get-version.outputs.result}}.zip
                  asset_name: opwallet-brave-v${{steps.get-version.outputs.result}}.zip
                  asset_content_type: application/zip

            - name: Upload Edge Asset
              id: upload_edge
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: dist/opwallet-edge-v${{steps.get-version.outputs.result}}.zip
                  asset_name: opwallet-edge-v${{steps.get-version.outputs.result}}.zip
                  asset_content_type: application/zip

            - name: Upload Opera Asset
              id: upload_opera
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: dist/opwallet-opera-v${{steps.get-version.outputs.result}}.zip
                  asset_name: opwallet-opera-v${{steps.get-version.outputs.result}}.zip
                  asset_content_type: application/zip

            - name: Upload Chrome Asset
              id: upload_chrome
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: dist/opwallet-chrome-v${{steps.get-version.outputs.result}}.zip
                  asset_name: opwallet-chrome-v${{steps.get-version.outputs.result}}.zip
                  asset_content_type: application/zip
